# Any files within repository managed by git is one of three types: 

# 1) tracked: Git knows about these, these are commited changes (which we can do with VSCode, 
# GitHub Desktop or with 'git add' in the terminal
# 2) untracked: unstaged changes within the current working directory 
# 3) ignored: files for which we tell git to completely exclude, we never want to commit any
# changes to these files 

# All ignored files are stored in the .gitignore file, a plain text file which tells git which 
# files in the reposiory should not be tracked. 

# We can specify a single file or a single directory to be ignored. 

# Usually we only place one single .gitignore file in the root directory of a project, but we 
# may add more if we like.

# Note that any file named with .filename will not be visible when using 'ls' in the terminal 

# File types which you may want to consider adding to your .gitignore include: 

#     Note that ** means this is important for our project! 

#     - OS System files 
#     - config files generated by applications such as code editors or IDEs
#     - Files automatically generated from a programming language or framework (such as .o files)
#     - Folders generated by package managers, such as npm's node_modules **
#     - Files that contain sensetive data and personal information **
#         - Files that contain usernames or passwords 
#         - .env files which contain API keys that need to remain secure 
#     - Runtime files such as .log files 

# If you want to ignore one specific file, you need to provide the full path to the file from the 
# root of the project.

#         myProject/src/text.txt 

# If you want to ignore any files with similar name, simply add the name of the files, but you do not 
# need to include the full path. 

#         text.txt

# To ignore an entire directory (and everything contained within it), you need to include the name of 
# the file with a slash at the end

#         test/

# Simply writing the following 

#         test 

# will mean that any file or directory with that name will be ignored.

# There are a number of other tricks and syntax details. Check out: 
# https://www.freecodecamp.org/news/gitignore-file-how-to-ignore-files-and-folders-in-git/

node_modules/ 